" Debugging:
"   List keybindings
"       :map
"       :nmap
"       :vmap
"       :imap
"   Show options
"       :options
"   Show startup error messages
"       :messages
"   Reload config:
"       :source ~/.vimrc
"       or
"       :so ~/.vimrc
"
" Adapted from: https://dougblack.io/words/a-good-vimrc.html

" Don't put any lines in your vimrc that you don't understand.
" Don't put any lines in your vimrc that you don't understand.
" Don't put any lines in your vimrc that you don't understand.

" Vim, not Vi {{{
" Don't try to be vi compatible
set nocompatible
" }}} ------------------------------------------------------------------------
" Vim Plug {{{
" Note: To install, do this:
"       curl -fLo ~/.vim/autoload/plug.vim --create-dir https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
" Note: Once installed, to install plugins, from within Vim, do this:
"       :PlugInstall
call plug#begin('~/.vim/plugged')
Plug 'tpope/vim-commentary'     " Toggle comments with commands like gc gcc gcgc
Plug 'kien/ctrlp.vim'           " Fuzzy finder
Plug 'flazz/vim-colorschemes'   " Tons of colorschemes
Plug 'dhruvasagar/vim-zoom'     " tmux-style 'zooming' - hit <C-W>m to toggle zoom into / out of a window (split).
Plug 'christoomey/vim-tmux-navigator'       " Seamless navigation between tmux panes and vim splits
" git
Plug 'mhinz/vim-signify'        " Puts symbols in the sign_column (gutter?) to indicate git status of given lines.
" Experimenting with these
" Plug 'dense-analysis/ale'       " Asynchronous linting... Nice, but loud, disabling for now.
call plug#end()
" }}} ------------------------------------------------------------------------
" Colors {{{
syntax enable           " enable syntax processing
"colorscheme evening    " This colorscheme included with Vim.
colorscheme badwolf     " This colorscheme available via plugin.
"set termguicolors      " Do NOT enable, breaks colors in vim under tmux: https://github.com/vim/vim/issues/3608
" }}} ------------------------------------------------------------------------
" Text Rendering {{{
set wrap                " Enable line wrapping.
set linebreak           " Avoid wrapping a line in the middle of a word.
" }}} ------------------------------------------------------------------------
" Spaces & Tabs & Indent {{{
set tabstop=4           " 4 space tab
set expandtab           " use spaces for tabs
set softtabstop=4       " 4 space tab
set shiftwidth=4        " 4 space indentations
"set shiftround          " TODO: Play with this more to really understand it.               When shifting lines, round the indentation to the nearest multiple of “shiftwidth.”
set modelines=10        " Allow putting a modeline (e.g. "# vim:set expandtab tabstop=4 softtabstop=4 shiftwidth=14:") within the first or last 10 lines of a file.
filetype on             " Turn on filetype detection                - see https://vi.stackexchange.com/a/10125
filetype plugin on      " Turn on filetype specific plugins         - see https://vi.stackexchange.com/a/10125
filetype indent on      " Turn on filetype specific indentations    - see https://vi.stackexchange.com/a/10125
set autoindent          " Turn on auto indentation.
" Normally, after highlighting (visually selecting) code and then indenting
" (shifting), the selection is dropped.  This sucks for doing multiple indents
" on the same code selection.  These remappings cause the selection to stay
" in place.
" Credit: https://www.reddit.com/r/vim/comments/6btmtg/how_to_indent_multiple_lines_multiple_times/dhpk1pw/
xnoremap < <gv
xnoremap > >gv
" Just use a single '>' to indent (while in normal mode).
nnoremap > >>
" Just use a single '<' to deindent (while in normal mode).
nnoremap < <<
" A few items from https://unix.stackexchange.com/a/76163 and https://unix.stackexchange.com/questions/76008/text-editor-with-indented-word-wrapping
" Better display of softwrap:
set showbreak=....         " Show '....' at the beginning of wrapped lines.
set breakindent                 " Make the any wrapped lines be indented.


" }}} ------------------------------------------------------------------------
" UI Layout {{{
set number              " show line numbers
set showcmd             " show command in bottom bar (right side) - basically just shows what you're typing...
set cursorline          " highlight current line
set wildmenu            " on second to bottom line, shows partial tab completion when tab-completing files in :ex
set showmatch           " higlight matching parenthesis
set laststatus=2        " Always display the status bar (2nd to last line)
set ruler               " Always show cursor position (in status bar)
set title               " Set the window’s title, reflecting the file currently being edited.
set visualbell          " blink cursor on error, instead of beeping
" }}} ------------------------------------------------------------------------
" Copy/Paste {{{
" Note:
"     Enabling these options will change how copy/paste works in your
"     terminal while running Vim.  Try these enabled and disabled, see what
"     you like.
"
"     With 'set mouse=a', for remote/SSH connections, to get cmd-c (i.e. copy)
"     to work, you need to do alt+mouse to do the selectioni.
"     See https://stackoverflow.com/a/10703012
"
" Note: iTerm also needs configuring for this to work:
"       Click box for: iTerm > Preferences > General > Applications in terminal may access clipboard
set clipboard=unnamed   " Copying with vim (e.g. 'y', 'd', 'dd', etc) puts yanked text into your clipboard.
set mouse=a             " Enable mouse for scrolling, resizing, clicking to move cursor, etc.
" }}} ------------------------------------------------------------------------
" Problematic Characters {{{
set fileformats=unix                    " We want to display MS Windows carriage returns as ^M if they are present, as they are problematic. Needs to go before 'set list'.
set list                                " See (some) hidden characters (see next line).
set listchars=tab:›\ ,extends:#,nbsp:.  " Highlight problematic whitespace characters.
" }}} ------------------------------------------------------------------------
" Performance {{{
set complete-=i         " Limit the files searched for auto-completes.
set lazyredraw          " Don’t update screen during macro and script execution.
" }}} ------------------------------------------------------------------------
" Searching {{{
set incsearch           " search as characters are entered
set hlsearch            " highlight all matches
set ignorecase          " ignore case when searching
set smartcase           " Automatically switch search to case-sensitive when search query contains an uppercase letter.
" }}} ------------------------------------------------------------------------
" Folding {{{
set foldmethod=indent   " fold based on indent level
set foldnestmax=10      " max 10 depth
set nofoldenable        " don't fold files by default on open
"nnoremap <space> za
"set foldlevelstart=10   " start with fold level of 1
" }}} ------------------------------------------------------------------------
" Line Shortcuts {{{
" in wrap mode, don't skip over wrapped portion of lines while navigating
" NOTE: Weird - These two lines are broken somehow.  They cause my cursor to
"   get "stuck" in various places...
"nnoremap j gj
"nnoremap k gk
" highlight last inserted text
nnoremap gV `[v`]
" }}} ------------------------------------------------------------------------
" Misc {{{
" Remove trailing whitespace on save
autocmd BufWritePre * :%s/\s\+$//e
" Make backspace sane / fixed - see https://vi.stackexchange.com/a/2163
set backspace=indent,eol,start
" }}} ------------------------------------------------------------------------

" vim:set expandtab tabstop=4 softtabstop=4 shiftwidth=4 foldenable foldmethod=marker foldlevel=0:
