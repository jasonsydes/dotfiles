# Debugging:
#   (You can replace 'tmux ' below with '<prefix> :')
#   List keybindings
#       tmux list-keys
#   Show options
#       tmux show-options -g        # global
#       tmux show-options -s        # server
#       tmux show-options -w        # window
#   Show startup error messages
#       tmux show-messages
#   Reload config
#       tmux source-file ~/.tmux.conf
#       or
#       C-a :source-file ~/.tmux.conf

# Never put anything in your tmux.conf that you don't understand.
# Never put anything in your tmux.conf that you don't understand.
# Never put anything in your tmux.conf that you don't understand.

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix
# Note: See below about prefix2.

# C-a a sends C-a to shell (to go to beginning of line)
bind a send-prefix

# Enable mouse support
set -g mouse on
# make scrolling with wheels work
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
# Renumber windows when a window is closed.
set -g renumber-windows on
# renumber/reorder windows by dragging using mouse
#       See https://github.com/tmux/tmux/issues/656
bind-key -n MouseDrag1Status swap-window -d -t=

# Note the double-click and triple-click isn't working.
# This link has a nice discussion, with a couple of solutions.  Will need to be
# cautious, as different platforms (osx vs linux) have different requirements:
#   https://stackoverflow.com/questions/31404140/can-i-use-double-click-to-select-and-copy-in-tmux

# Start window numbering at 1
set -g base-index 1

# Move status bar to top
set-option -g status-position top

# Use vi keybindings
set-window-option -g mode-keys vi
# Like vi, use 'v' and 'y' for start visual selection and yank respectively. (Credit: https://sanctum.geek.nz/arabesque/vi-mode-in-tmux/)
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# Vim like splits:
#   Vertical split: C-a C-v         - meant to mimic vim's :vs
#   Horizontal split: C-a C-s       - meant to mimic vim's :sp
bind -T prefix C-v split-window -h
bind -T prefix C-s split-window -v
unbind -T prefix %
unbind -T prefix '"'

# Correct color support.
# See:
#   https://github.com/tmux/tmux/wiki/FAQ
#   https://unix.stackexchange.com/a/1098
#   https://jdhao.github.io/2018/10/19/tmux_nvim_true_color/
# Note: Use screen-256color instead of tmux-256color, as the latter causes
# 'less' to spit out this error:
#       WARNING: terminal is not fully functional
# and then asks you to his ESC to continue.
set -g default-terminal "screen-256color"
# tell Tmux that outside terminal supports true color
set -ga terminal-overrides ",xterm-256color*:Tc"

# Aggressive Resize
# (from http://mutelight.org/articles/practical-tmux)
#
# By default, all windows in a session are constrained to the size of the
# smallest client connected to that session, even if both clients are looking
# at different windows. It seems that in this particular case, Screen has the
# better default where a window is only constrained in size if a smaller client
# is actively looking at it. This behaviour can be fixed by setting tmux's
# aggressive-resize option.
setw -g aggressive-resize on

# When using LunarVim in tmux, when hitting "ESC" then "j" or "k" under default
# tmux config, it will MOVE the current line down/up one line respectively; not cool!
# Bug detailed here:
#   https://github.com/LunarVim/LunarVim/issues/1857
# This fixes it:
set -sg escape-time 10

# Some Vim integration.
#
# The following did not work. Not sure why. Gotta get back to work.
#
        ### EXPERIMENTAL - I setup cmd-ctrl-[ and -] in iTerm to send hex codes
        ### <prefix>p and <prefix>n to tmux to allow 'one key' pane switching.
        ### Unfortunately, if I do this accidentailly while *not* in tmux but *in* vim,
        ### it sends a ctrl-a following by a p or n, which 'does stuff' in vim (e.g.
        ### pasting.
        ### So!
        ### I could just do this:
        ###            noremap <C-a>p <Nop>
        ###            noremap <C-a>n <Nop>
        ### to turn off ctrl-a p and ctrl-a n in vim, but that 'slows down' ctrl-a (by
        ### making it wait for 'timeout'), and I think I want to keep ctrl-a. Instead,
        ### ctrl-@ seems much less used, I think I can live without it.  See in
        ### particular https://vim.fandom.com/wiki/Unused_keys
        ### So! I will 1) make <C-@> the prefix2 in tmux, 2) I will map C-@ p and n to
        ### prev and next-window, 3) I will have iTerm send the hex codes for <C-@>p or n
        ### when I push cmd-ctrl-[ or -], and 4) I will map <C-@>p and n to NOOPs.
        ##set-option -g prefix2 C-@
        ##bind -T prefix2 p previous-window
        ##bind -T prefix2 n next-window

# Tmux Plugins
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible' - Disabling for now... You'll want to go through and add these in step by step...
set -g @plugin 'christoomey/vim-tmux-navigator'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
